*> Mission: Demonstrate an attention-getting time display.
*> GnuCOBOL: cobc -x -j -free ConstantClock.cob
*> Source: https://github.com/soft9000/COBOL/tree/master/GbuCOBOL/BANNER
IDENTIFICATION DIVISION.
PROGRAM-ID. CONSTANT-CLOCK.

DATA DIVISION.
WORKING-STORAGE SECTION.
COPY "WS_COLORS.cpy". *> New: Another CONSTANT effort.
COPY "WS_CURRENT_DATE.cpy".
COPY 'CB_RASTER_IO.cpy'.
COPY 'CB_CLS.cpy'. *> New!

01 BACKGROUND-CHAR PIC X VALUE ':'.
01 RASTER_SS       PIC 99.
01 SCREEN_OFFSET_Y PIC 99.

PROCEDURE DIVISION.
MOVE BACKGROUND-CHAR TO SCREEN_CHAR.
MOVE 24 TO SCREEN_HEIGHT.
PERFORM FOREVER
    INITIALIZE RASTER-IO
    MOVE FUNCTION CURRENT-DATE to WS-CURRENT-DATE-GROUP
    STRING  WS-CURRENT-HOURS '.'
            WS-CURRENT-MINUTE '.' 
            WS-CURRENT-SECOND
        INTO BANNER_FIELD
    CALL 'PROC_BANNER' USING RASTER-IO
    CALL 'PROC_CLS' USING PARAMS-CLS
    IF RASTER_SUCCESS
        INSPECT RASTER_BUFFER REPLACING ALL ' ' BY SCREEN_CHAR
        INSPECT RASTER_BUFFER REPLACING ALL 'X' BY ' '
        PERFORM VARYING RASTER_SS 
        FROM 1 BY 1 UNTIL RASTER_SS > RASTER_LINES
        *> PERFORM DISPLAY_FLAT
        PERFORM DISPLAY_COLORIZED
        END-PERFORM
        CALL "C$SLEEP" USING 1 END-CALL
    ELSE
        DISPLAY 'Rasterization Error?'
        EXIT PROGRAM
END-PERFORM.

DISPLAY "N.E.O.J".
GOBACK.

DISPLAY_FLAT.
    DISPLAY NINE_LINES(RASTER_SS).

DISPLAY_COLORIZED.
    MOVE RASTER_SS TO SCREEN_OFFSET_Y
    ADD 6 TO SCREEN_OFFSET_Y
    DISPLAY NINE_LINES(RASTER_SS) AT LINE SCREEN_OFFSET_Y COLUMN 5 
        WITH FOREGROUND-COLOR IS WHITE   
        BACKGROUND-COLOR      IS BLACK.

END PROGRAM CONSTANT-CLOCK.

COPY "PROC_BANNER9.cob".
COPY "PROC_CLS.cob". *> New!

