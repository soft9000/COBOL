#!/usr/bn/env python3
# Mission: IBM & GNU ~v~ 2014 COBOL Standard
# Project: https://github.com/soft9000/Blog9000/tree/master/GnuCOBOL/INTRINSIC
print("Modern COBOL: Intrinsic Functions.")
STD2014 = '''ABS
ACOS
ANNUITY
ASIN
ATAN
BOOLEAN-OF-INTEGER
BYTE-LENGTH
CHAR
CHAR-NATIONAL
COMBINED-DATETIME
COS
CURRENCY-SYMBOL
CURRENT-DATE
DATE-OF-INTEGER
DATE-TO-YYYYMMDD
DAY-OF-INTEGER
DAY-TO-YYYYDDD
DISPLAY-OF
E
EXCEPTION-FILE
EXCEPTION-FILE-N
EXCEPTION-LOCATION
EXCEPTION-LOCATION-N
EXCEPTION-STATEMENT
EXCEPTION-STATUS
EXP
EXP10
FACTORIAL
FORMATTED-CURRENT-DATE
FORMATTED-DATE
FORMATTED-DATETIME
FORMATTED-TIME
FRACTION-PART
HIGHEST-ALGEBRAIC
INTEGER
INTEGER-OF-BOOLEAN
INTEGER-OF-DATE
INTEGER-OF-DAY
INTEGER-OF-FORMATTED-DATE
INTEGER-PART
LENGTH
LENGTH-AN
LOCALE-COMPARE
LOCALE-DATE
LOCALE-TIME
LOCALE-TIME-FROM-SECONDS
LOG
LOG10
LOWER-CASE
LOWEST-ALGEBRAIC
MAX
MEAN
MEDIAN
MIDRANGE
MIN
MOD
MODULE-CALLER-ID
MODULE-DATE
MODULE-FORMATTED-DATE
MODULE-ID
MODULE-PATH
MODULE-SOURCE
MODULE-TIME
MONETARY-DECIMAL-POINT
MONETARY-THOUSANDS-SEPARATOR
NATIONAL-OF
NUMERIC-DECIMAL-POINT
NUMERIC-THOUSANDS-SEPARATOR
NUMVAL
NUMVAL-C
NUMVAL-F
ORD
ORD-MAX
ORD-MIN
PI
PRESENT-VALUE
RANDOM
RANGE
REM
REVERSE
SECONDS-FROM-FORMATTED-TIME
SECONDS-PAST-MIDNIGHT
SIGN
SIN
SQRT
STANDARD-COMPARE
STANDARD-DEVIATION
STORED-CHAR-LENGTH
SUM
TAN
TEST-DATE-YYYYMMDD
TEST-DAY-YYYYDDD
TEST-FORMATTED-DATETIME
TEST-NUMVAL
TEST-NUMVAL-C
TEST-NUMVAL-F
TRIM
UPPER-CASE
VARIANCE
WHEN-COMPILED
YEAR-TO-YYYY'''.split('\n')

STDGNU = '''ABS
ACOS
ANNUITY
ASIN
ATAN
BOOLEAN-OF-INTEGER
BYTE-LENGTH
CHAR
CHAR-NATIONAL
COMBINED-DATETIME
CONCATENATE
COS
CURRENCY-SYMBOL
CURRENT-DATE
DATE-OF-INTEGER
DATE-TO-YYYYMMDD
DAY-OF-INTEGER
DAY-TO-YYYYDDD
DISPLAY-OF
E
EXCEPTION-FILE
EXCEPTION-FILE-N
EXCEPTION-LOCATION
EXCEPTION-LOCATION-N
EXCEPTION-STATEMENT
EXCEPTION-STATUS
EXP
EXP10
FACTORIAL
FORMATTED-CURRENT-DATE
FORMATTED-DATE
FORMATTED-DATETIME
FORMATTED-TIME
FRACTION-PART
HIGHEST-ALGEBRAIC
INTEGER
INTEGER-OF-BOOLEAN
INTEGER-OF-DATE
INTEGER-OF-DAY
INTEGER-OF-FORMATTED-DATE
INTEGER-PART
LENGTH
LENGTH-AN
LOCALE-COMPARE
LOCALE-DATE
LOCALE-TIME
LOCALE-TIME-FROM-SECONDS
LOG
LOG10
LOWER-CASE
LOWEST-ALGEBRAIC
MAX
MEAN
MEDIAN
MIDRANGE
MIN
MOD
MODULE-CALLER-ID
MODULE-DATE
MODULE-FORMATTED-DATE
MODULE-ID
MODULE-PATH
MODULE-SOURCE
MODULE-TIME
MONETARY-DECIMAL-POINT
MONETARY-THOUSANDS-SEPARATOR
NATIONAL-OF
NUMERIC-DECIMAL-POINT
NUMERIC-THOUSANDS-SEPARATOR
NUMVAL
NUMVAL-C
NUMVAL-F
ORD
ORD-MAX
ORD-MIN
PI
PRESENT-VALUE
RANDOM
RANGE
REM
REVERSE
SECONDS-FROM-FORMATTED-TIME
SECONDS-PAST-MIDNIGHT
SIGN
SIN
SQRT
STANDARD-COMPARE
STANDARD-DEVIATION
STORED-CHAR-LENGTH
SUBSTITUTE
SUBSTITUTE-CASE
SUM
TAN
TEST-DATE-YYYYMMDD
TEST-DAY-YYYYDDD
TEST-FORMATTED-DATETIME
TEST-NUMVAL
TEST-NUMVAL-C
TEST-NUMVAL-F
TRIM
UPPER-CASE
VARIANCE
WHEN-COMPILED
YEAR-TO-YYYY'''.split('\n')

STDIBM = '''ACOS
ANNUITY
ASIN
ATAN
CHAR
COS
CURRENT-DATE
DATE-OF-INTEGER
DATE-TO-YYYYMMDD
DAY-OF-INTEGER
DAY-TO-YYYYDDD
DISPLAY-OF
X
FACTORIAL
INTEGER
INTEGER-OF-DATE
INTEGER-OF-DAY
INTEGER-PART
LENGTH
LOG
LOG10
LOWER-CASE
U1
MAX
I1
N1
X1
U1
MEAN
MEDIAN
MIDRANGE
MIN
I1
N1
X1
U1
MOD
NATIONAL-OF
A1
X1
D1
I2
NUMVAL
NUMVAL-C
N
ORD
ORD-MAX
ORD-MIN
PRESENT-VALUE
RANDOM
RANGE
N1
REM
REVERSE
U1
SIN
SQRT
STANDARD-DEVIATION
SUM
N1
TAN
ULENGTH
UPOS
UPPER-CASE
U1
USUBSTR
USUPPLEMENTARY
UUID4
UVALID
UWIDTH
VARIANCE
WHEN-COMPILED
YEAR-TO-YYYY
FORMATTED-TIME
TEST-NUMVAL
MODULE-FORMATTED-DATE
NUMVAL-F
LOCALE-DATE
EXCEPTION-FILE
E
MODULE-TIME
CHAR-NATIONAL
EXCEPTION-LOCATION
LOWEST-ALGEBRAIC
SIGN
TEST-NUMVAL-C
EXP
EXCEPTION-STATEMENT
MODULE-CALLER-ID
ABS
TEST-FORMATTED-DATETIME
PI
EXCEPTION-FILE-N
LOCALE-COMPARE
STANDARD-COMPARE
LENGTH-AN
BOOLEAN-OF-INTEGER
LOCALE-TIME-FROM-SECONDS
MODULE-PATH
LOCALE-TIME
FORMATTED-CURRENT-DATE
SECONDS-PAST-MIDNIGHT
FORMATTED-DATETIME
FORMATTED-DATE
HIGHEST-ALGEBRAIC
MODULE-DATE
NUMERIC-THOUSANDS-SEPARATOR
TRIM
MODULE-ID
MONETARY-DECIMAL-POINT
BYTE-LENGTH
STORED-CHAR-LENGTH
TEST-DAY-YYYYDDD
TEST-NUMVAL-F
EXP10
CURRENCY-SYMBOL
INTEGER-OF-FORMATTED-DATE
NUMERIC-DECIMAL-POINT
FRACTION-PART
COMBINED-DATETIME
MODULE-SOURCE
EXCEPTION-LOCATION-N
SECONDS-FROM-FORMATTED-TIME
EXCEPTION-STATUS
TEST-DATE-YYYYMMDD
MONETARY-THOUSANDS-SEPARATOR
INTEGER-OF-BOOLEAN'''.split('\n')

STDMFC = '''ABS
ACOS
ANNUITY
ASIN
ATAN
BIT-OF
BIT-TO-CHAR
BOOLEAN-OF-INTEGER
BYTE-LENGTH
CHAR
CHAR-NATIONAL
COS
CURRENT-DATE
DATE-OF-INTEGER
DATE-TO-YYYYMMDD
DAY-OF-INTEGER
DAY-TO-YYYYDDD
DISPLAY-OF
E
EXP
EXP10
FACTORIAL
FRACTION-PART
HEX-OF
HEX-TO-CHAR
INTEGER
INTEGER-OF-BOOLEAN
INTEGER-OF-DATE
INTEGER-OF-DAY
INTEGER-PART
LENGTH
LENGTH-AN
LOG
LOG10
LOWER-CASE
MAX
MEAN
MEDIAN
MIDRANGE
MIN
MOD
NATIONAL-OF
NUMVAL
NUMVAL-C
NUMVAL-F
ORD
ORD-MAX
ORD-MIN
PI
PRESENT-VALUE
RANDOM
RANGE
REM
REVERSE
SIGN
SIN
SQRT
STANDARD-DEVIATION
SUM
TAN
TEST-DATE-YYYYMMDD
TEST-DAY-YYYYDDD
TEST-NUMVAL
TEST-NUMVAL-C
TEST-NUMVAL-F
TRIM
ULENGTH
UPOS
UPPER-CASE
USUBSTR
USUPPLEMENTARY
UUID4
UVALID
UWIDTH
VARIANCE
WHEN-COMPILED
YEAR-TO-YYYY'''.split('\n')

std = set(STD2014)
gnu = set(STDGNU)
ibm = set(STDIBM)
mfc = set(STDMFC)

mega = {*STD2014,*STDGNU,*STDIBM, *STDMFC}

for ss, line in enumerate(sorted(mega),1):
	sg = 'g' if line in gnu else ' '
	si = 'i' if line in ibm else ' '	
	sf = 'f' if line in mfc else ' '	
	sd = '+' if line not in std else ' '	
	print(f"{ss:03}.) {sd}{sg}{si}{sf} {line}")
print()
print("    Key:", "+ = Superset",
      "g = GnuCOBOL", "i = IBM",
      "f = Micro Focus", sep='\n      ')
print()
print("Supersets:")
print("  GNU:", *sorted(gnu - std), sep='\n\t')
print()
print("  IBM:", *sorted(ibm - std), sep='\n\t')
print("  Micro Focus:", *sorted(mfc - std), sep='\n\t')
print()
print("Unsupported:")
print("  Only Micro Focus has unsupport?")
for ss, line in enumerate(sorted(std - mfc),1):
        print(f'\t{ss:02}.) {line}',sep='\n\t')

